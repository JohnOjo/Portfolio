{"version":3,"sources":["assets/Bubbles.svg","assets/angular.svg","assets/amazon_web_services.svg","assets/nodejs.svg","assets/net_core.svg","assets/react.svg","assets/postgresql.svg","assets/Bookings_Claims_Architecture.svg","constants/headerConstants.js","components/Header/Header.js","assets/Ellipse.svg","components/QuoteBox/QuoteBox.js","assets/JohnImage.jpg","pages/Home/Home.js","routes/Routes.js","constants/urlConstants.js","App.js","reportWebVitals.js","index.js"],"names":["FAVOURTIE_PROJECTS","OTHER_PROJECTS","TECHNOLOGIES_USED","Header","headerButton","className","onClick","handleClick","map","renderHeaderButton","pageHeight","document","getElementById","scrollHeight","window","scrollTo","top","left","behavior","this","renderHeaderButtons","Component","withRouter","QuoteBox","props","cardPreHeader","cardHeaderEnd","cardBody","boxClass","index","src","Ellipse","alt","Home","testimonyCard","pretitle","titleEnd","body","cardImage","image","Bubbles","profile","title","generateProjectInfo","testimonyCards","length","renderQuoteBox","partners","partner","profiles","renderProject","whoIsItFor","bodyItem","favouriteProjects","projectTitle","projectInfo","extraProjectInfo","projectsLeft","JohnImage","projectsRight","technologiesUsed","Angular","ReactImage","NodeJs","NetCore","AmazonWebServices","Postgresql","renderBubbles","BookingsClaimsArchitecture","generateProjects","generateTechnologies","Routes","exact","path","App","routes","push","getRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4174b573.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Bubbles.4d8deca5.svg\";","export default __webpack_public_path__ + \"static/media/angular.3f781d91.svg\";","export default __webpack_public_path__ + \"static/media/amazon_web_services.cc38dbe9.svg\";","export default __webpack_public_path__ + \"static/media/nodejs.dd47e26e.svg\";","export default __webpack_public_path__ + \"static/media/net_core.e2aac1c9.svg\";","export default __webpack_public_path__ + \"static/media/react.928f956d.svg\";","export default __webpack_public_path__ + \"static/media/postgresql.29aef667.svg\";","export default __webpack_public_path__ + \"static/media/Bookings_Claims_Architecture.73563eab.svg\";","export const BIO = 'Bio'\r\nexport const FAVOURTIE_PROJECTS = 'Favourite Projects'\r\nexport const OTHER_PROJECTS = 'Other Projects'\r\nexport const TECHNOLOGIES_USED = 'Technologies Used'\r\nexport const SCROLL_ELEMENT = 'root'\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport './Header.scss'\r\nimport { BIO, FAVOURTIE_PROJECTS, OTHER_PROJECTS, TECHNOLOGIES_USED, SCROLL_ELEMENT } from '../../constants/headerConstants'\r\n\r\nclass Header extends Component {\r\n    renderHeaderButton(headerButton) {\r\n        return (\r\n            <div\r\n                key={headerButton}\r\n                className={'header-text header-button'}\r\n                onClick={() => this.handleClick(headerButton)}\r\n            >\r\n                <div className={'header-item-text'}>{headerButton}</div>\r\n                <div className={'header-underline'}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderHeaderButtons() {\r\n        const headerButtons = [\r\n            BIO, FAVOURTIE_PROJECTS, OTHER_PROJECTS, TECHNOLOGIES_USED\r\n        ]\r\n        return (\r\n            headerButtons.map(headerButton=>this.renderHeaderButton(headerButton))\r\n        )\r\n    }\r\n\r\n    handleClick(headerButton) {\r\n        const page = document.getElementById(SCROLL_ELEMENT)\r\n        const pageHeight = page.scrollHeight\r\n        switch (headerButton) {\r\n        case BIO:\r\n            window.scrollTo({\r\n                top: 0,\r\n                left: 0,\r\n                behavior: 'smooth'\r\n            })\r\n            break\r\n        case FAVOURTIE_PROJECTS:\r\n            window.scrollTo({\r\n                top: pageHeight * 0.25,\r\n                left: 0,\r\n                behavior: 'smooth'\r\n            })\r\n            break\r\n        case OTHER_PROJECTS:\r\n            window.scrollTo({\r\n                top: pageHeight * 0.5,\r\n                left: 0,\r\n                behavior: 'smooth'\r\n            })\r\n            break\r\n        case TECHNOLOGIES_USED:\r\n            window.scrollTo({\r\n                top: pageHeight * 0.75,\r\n                left: 0,\r\n                behavior: 'smooth'\r\n            })\r\n            break\r\n        default:\r\n            break\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'header'}>\r\n                <div className={'header-text-container'}>\r\n                    <div className={'header-text header-title typed-out'}>\r\n                        {'John Ojo'}\r\n                    </div>\r\n                </div>\r\n                <div className={'f-1'}/>\r\n                <div className={'buttons-container'}>\r\n                    {this.renderHeaderButtons()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (withRouter(Header))\r\n","export default __webpack_public_path__ + \"static/media/Ellipse.4e9100ef.svg\";","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './QuoteBox.scss'\r\nimport Ellipse from '../../assets/Ellipse.svg'\r\n\r\nexport default class QuoteBox extends Component {\r\n    render() {\r\n        const { cardPreHeader, cardHeaderEnd, cardBody, index } = this.props\r\n        const boxClass = index % 2 === 0 ? 'box' : 'box box-float-right'\r\n        return (\r\n            <div className={boxClass}>\r\n                <div className={'box-image-container'}>\r\n                    <img className={'box-image'} src={Ellipse} alt={'testimony'}/>\r\n                </div>\r\n                <div className={'box-text-container'}>\r\n                    <div className={'box-header-div'}>\r\n                        <div className={'box-pre-header'}>{cardPreHeader}</div>\r\n                        <div className={'box-header-end'}>{cardHeaderEnd}</div>\r\n                    </div>\r\n                    <div className={'box-body'}>{cardBody}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nQuoteBox.propTypes = {\r\n    cardBody: PropTypes.string,\r\n    cardHeaderEnd: PropTypes.string,\r\n    cardPreHeader: PropTypes.string,\r\n    index: PropTypes.number,\r\n}\r\n","export default __webpack_public_path__ + \"static/media/JohnImage.b0d6a2d3.jpg\";","import React, { Component } from 'react'\r\nimport './Home.scss'\r\nimport Bubbles from '../../assets/Bubbles.svg'\r\nimport Angular from '../../assets/angular.svg'\r\nimport AmazonWebServices from '../../assets/amazon_web_services.svg'\r\nimport NodeJs from '../../assets/nodejs.svg'\r\nimport NetCore from '../../assets/net_core.svg'\r\nimport ReactImage from '../../assets/react.svg'\r\nimport Postgresql from '../../assets/postgresql.svg'\r\nimport BookingsClaimsArchitecture from '../../assets/Bookings_Claims_Architecture.svg'\r\nimport Header from '../../components/Header/Header'\r\nimport QuoteBox from '../../components/QuoteBox/QuoteBox'\r\nimport JohnImage from '../../assets/JohnImage.jpg'\r\n\r\nexport default class Home extends Component {\r\n    renderQuoteBox(testimonyCard, index) {\r\n        return(\r\n            <QuoteBox\r\n                key={index}\r\n                index={index}\r\n                cardPreHeader={testimonyCard?.pretitle}\r\n                cardHeaderEnd={testimonyCard?.titleEnd}\r\n                cardBody={testimonyCard?.body}\r\n                cardImage={testimonyCard?.image}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderBubbles() {\r\n        return(\r\n            <img className={'bubbles'} src={Bubbles} alt={'ellipse'}/>\r\n        )\r\n    }\r\n\r\n    renderProject(profile, index) {\r\n        return(\r\n            <div className={'project-container'} key={index}>\r\n                <img className={'project-image'} src={profile?.image} alt={'project'}/>\r\n                <div className={'project-text-container'}>\r\n                    <div className={'project-title'}>{profile?.title}</div>\r\n                    {this.generateProjectInfo(profile?.body)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    generateVisionMissionValues(testimonyCards) {\r\n        if (testimonyCards?.length > 0) {\r\n            return testimonyCards.map((testimonyCard, index) => this.renderQuoteBox(testimonyCard, index))\r\n        }\r\n    }\r\n\r\n    generateTechnologies(partners) {\r\n        if (partners?.length > 0) {\r\n            return partners.map((partner, index) => {\r\n                return(\r\n                    <img className={'technologies-used'} src={partner} alt={'technology'} key={index}/>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    generateProjects(profiles) {\r\n        if (profiles?.length > 0) {\r\n            return profiles.map((profile, index) => this.renderProject(profile, index))\r\n        }\r\n    }\r\n\r\n    generateProjectInfo(whoIsItFor) {\r\n        if (whoIsItFor?.length > 0) {\r\n            return whoIsItFor.map((bodyItem, index) => {\r\n                return(\r\n                    <li key={index}>{bodyItem}</li>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const technologiesUsedTitle = 'Technologies Used'\r\n        const projectsTitle = 'Other Projects'\r\n\r\n        const favouriteProjects = [\r\n            {\r\n                projectTitle:'Bookings and Claims Project',\r\n                projectInfo: [\r\n                    'Description: An office and events bookings,  as well as claims web application, following a microservices architecture. ',\r\n                    'Role: Technical Team Lead, Managed 32 graduates',\r\n                    'Tasks: Drew up solution architecture, setup cloud environment, deployments , setup server, managed team, scoped out project features, reviewed pull requests.',\r\n                    'Tech: Angular 12, .NET 5, PostgreSQL, AWS EC2, AWS S3, AWS RDS',\r\n                    'Worked in a team environment'\r\n                ],\r\n                extraProjectInfo: [\r\n                    'Description: An office and events bookings,  as well as claims web application, following a microservices architecture. ',\r\n                    'Role: Technical Team Lead, Managed 32 graduates',\r\n                    'Tasks: Drew up solution architecture, setup cloud environment, deployments , setup server, managed team, scoped out project features, reviewed pull requests.',\r\n                    'Tech: Angular 12, .NET 5, PostgreSQL, AWS EC2, AWS S3, AWS RDS',\r\n                    'Worked in a team environment'\r\n                ]\r\n            }\r\n        ]\r\n\r\n        const projectsLeft = [\r\n            {\r\n                title: 'Medical Project',\r\n                body: [\r\n                    'Medical application that stored patient appointments and data and allowed researchers and doctors to view patient information.',\r\n                    'Tasks: Builded up CMS, wrote automated tests, created APIs to get, update and add patient data and created dynamic frontend to handle CMS content, edit patient data and view patient data.',\r\n                    'Tech: React-Redux, NodeJs (TypeScript), Express, Postgresql, TypeORM, AWS S3, Prismic'\r\n                ],\r\n                image: JohnImage\r\n            },\r\n            {\r\n                title: 'Reporting Project',\r\n                body: [\r\n                    'Medical application that stored patient appointments and data and allowed researchers and doctors to view patient information.',\r\n                    'Tasks: Builded up CMS, wrote automated tests, created APIs to get, update and add patient data and created dynamic frontend to handle CMS content, edit patient data and view patient data.',\r\n                    'Tech: React-Redux, NodeJs (TypeScript), Express, Postgresql, TypeORM, AWS S3, Prismic'\r\n                ],\r\n                image: JohnImage\r\n            },\r\n            {\r\n                pretitle: 'Financial Project',\r\n                body: [\r\n                    'Medical application that stored patient appointments and data and allowed researchers and doctors to view patient information.',\r\n                    'Tasks: Builded up CMS, wrote automated tests, created APIs to get, update and add patient data and created dynamic frontend to handle CMS content, edit patient data and view patient data.',\r\n                    'Tech: React-Redux, NodeJs (TypeScript), Express, Postgresql, TypeORM, AWS S3, Prismic'\r\n                ],\r\n                image: JohnImage\r\n            }\r\n        ]\r\n        const projectsRight = [\r\n            {\r\n                title: 'Mining Project',\r\n                body: [\r\n                    'Medical application that stored patient appointments and data and allowed researchers and doctors to view patient information.',\r\n                    'Tasks: Builded up CMS, wrote automated tests, created APIs to get, update and add patient data and created dynamic frontend to handle CMS content, edit patient data and view patient data.',\r\n                    'Tech: React-Redux, NodeJs (TypeScript), Express, Postgresql, TypeORM, AWS S3, Prismic'\r\n                ],\r\n                image: JohnImage\r\n            },\r\n            {\r\n                title: 'Reporting Project ',\r\n                body: [\r\n                    'Medical application that stored patient appointments and data and allowed researchers and doctors to view patient information.',\r\n                    'Tasks: Builded up CMS, wrote automated tests, created APIs to get, update and add patient data and created dynamic frontend to handle CMS content, edit patient data and view patient data.',\r\n                    'Tech: React-Redux, NodeJs (TypeScript), Express, Postgresql, TypeORM, AWS S3, Prismic'\r\n                ],\r\n                image: JohnImage\r\n            },\r\n            {\r\n                pretitle: 'Security/Auditing Project',\r\n                body: [\r\n                    'Medical application that stored patient appointments and data and allowed researchers and doctors to view patient information.',\r\n                    'Tasks: Builded up CMS, wrote automated tests, created APIs to get, update and add patient data and created dynamic frontend to handle CMS content, edit patient data and view patient data.',\r\n                    'Tech: React-Redux, NodeJs (TypeScript), Express, Postgresql, TypeORM, AWS S3, Prismic'\r\n                ],\r\n                image: JohnImage\r\n            }\r\n        ]\r\n\r\n        const technologiesUsed = [Angular, ReactImage, NodeJs, NetCore, AmazonWebServices, Postgresql]\r\n\r\n        return (\r\n            <div className={'App'}>\r\n                <Header/>\r\n                <div className={'float-right'}>\r\n                    {this.renderBubbles()}\r\n                </div>\r\n                {/* <div className={'vision-mission-values-container'}>{this.generateVisionMissionValues(visionMissionValuesCards)}</div> */}\r\n                <div className={'about-me-container'}>\r\n                    <div className={'about-me-bio'}>\r\n                        <div className={'about-me-title'}>{'Bio text'}</div>\r\n                        <div className={'about-me-description'}>{'Since the beginning of my degree I have been looking forward to doing Software Engineering. I wanted to combine different systems, mix the old and the new and especially combine mathematics and Information Technology. Mathematics has been the one subject that has been getting the best of students and IT is the new world that people want to be part of. I want to work with different people, create things that were just thoughts and improve life as a whole.'}</div>\r\n                    </div>\r\n                    <img className={'about-me-image'} src={JohnImage} alt={'John'}/>\r\n                </div>\r\n                <div className={'projects-container'}>\r\n                    <div className={'projects-title'}>{'Favourite Projects'}</div>\r\n                    <div className={'projects-body'}>\r\n                        <div className={'project-title'}>{favouriteProjects[0].projectTitle}</div>\r\n                        <ul className={'solving-problem-list'}>\r\n                            {this.generateProjectInfo(favouriteProjects[0].projectInfo)}\r\n                        </ul>\r\n                        <img className={'architecture-image'} src={BookingsClaimsArchitecture} alt={'Bookings Claims Architecture'}/>\r\n                        <ul className={'solving-problem-list'}>\r\n                            {this.generateProjectInfo(favouriteProjects[0].extraProjectInfo)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {this.renderBubbles()}\r\n                <div className={'projects-container'}>\r\n                    <div className={'projects-title'}>{projectsTitle}</div>\r\n                    <div className={'projects-body'}>\r\n                        <div className={'projects-left-container'}>\r\n                            {this.generateProjects(projectsLeft)}\r\n                        </div>\r\n                        {/* <div className={'projects-divider'}></div> */}\r\n                        <div className={'projects-right-container'}>\r\n                            {this.generateProjects(projectsRight)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'float-right'}>\r\n                    {this.renderBubbles()}\r\n                </div>\r\n                <div className={'our-partners-container'}>\r\n                    <div className={'our-partners-title'}>{technologiesUsedTitle}</div>\r\n                    <div className={'partners-list-container'}>\r\n                        {this.generateTechnologies(technologiesUsed)}\r\n                    </div>\r\n                </div>\r\n                {this.renderBubbles()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport { HOME_URL } from '../constants/urlConstants'\r\nimport Home from '../pages/Home/Home'\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route exact path={HOME_URL}>\r\n                        <Home />\r\n                    </Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes\r\n","export const HOME_URL = '/'\r\n","import React, { Component } from 'react'\nimport './App.scss'\nimport Routes from './routes/Routes'\n\nclass App extends Component {\n    getRoutes() {\n        const routes = []\n        routes.push(<Routes key={'routes'}/>)\n        return routes\n    }\n\n    render() {\n        return (\n            <div className={'App'}>\n                {this.getRoutes()}\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}